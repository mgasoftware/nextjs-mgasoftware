import styles from "./index.module.css";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRef } from "react";
import axios from "axios"
import { useDispatch, useSelector } from 'react-redux';
import { useRouter } from "next/router";

import { loginFail, loginPending, loginSuccess } from "~/store/loginSlice";

interface LoginState {
  isLoading: boolean;
  error: string | null;
}

const Home: NextPage = () => {
  const username = useRef<null | HTMLInputElement>(null)
  const password = useRef<null | HTMLInputElement>(null)

  const router = useRouter();
  const dispatch = useDispatch();
  const { isLoading, error } = useSelector((state: { login: LoginState }) => state.login);

  const login = async () => {
    dispatch(loginPending())
    try {
      const res = await axios.post('http://127.0.0.1:8000/api/login/', {
        username: username.current?.value,
        password: password.current?.value
      }, {
        headers: {
          'Content-Type': 'application/json',
          Accept: 'application/json',
        },
      },)
      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access
      localStorage.setItem("token", res.data?.access)
      dispatch(loginSuccess())
      console.log(res)
      await router.push('../dashboard')
    } catch (error) {
      if (axios.isAxiosError(error)) {
        dispatch(loginFail(error.message))
        console.log('error message: ', error.message);
        return error.message;
      } else {
        dispatch(loginFail('unexpected error'))
        console.log('unexpected error: ', error);
        return 'An unexpected error occurred';
      }
    }
  }

  return (
    <>
      <Head>
        <title>Learn@Home</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.containerLeft}>
          <Image
            width={350}
            height={175}
            src="/logo.png"
            alt="logo du site"
            className={styles.image} />
        </div>
        <div className={styles.containerRight}>
          <h1 className={styles.connexionTitle}>Connexion</h1>
          <p className={styles.label}>Nom</p>
          <input type="text" name="username" className={styles.input} ref={username} />
          <p className={styles.label}>Mot de Passe</p>
          <input type="password" name="username" className={styles.input} ref={password} />

          {isLoading ? (<button disabled={true} className={styles.button}>Loading</button>) :
                            (<button className={styles.button} onClick={() => void login()}>S&apos;identifier</button>)
                        }
        </div>
      </main>
    </>
  );
};

export default Home;
